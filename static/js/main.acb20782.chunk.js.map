{"version":3,"sources":["routes-config/App.routes.ts","components/styled.tsx","components/Loader.tsx","components/Suspense.tsx","components/Logo.tsx","components/Header.tsx","pages/NotFound.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","utils.ts","seeds.ts","context/SocialContext.tsx"],"names":["Home","lazy","Add","Relationship","VisualRelationship","appRoutes","home","path","exact","component","add","relationship","internalRoutes","visualRelationship","Container","styled","div","DegreeOfSeparationWrapper","PersonWrapper","props","width","SeparationLine","ScrollingX","StyledDiv","span","Loader","SuspenseWrapper","children","fallback","StyledSpan","Logo","Header","Menu","Item","as","NavLink","to","NotFound","Segment","Message","error","Content","App","Object","values","map","index","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","autoClose","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","idGenerator","isEmpty","value","keys","length","postFakeRequest","data","Promise","res","setTimeout","i","SocialContext","createContext","idGen","connections","Array","fill","firstName","faker","name","lastName","id","next","relationTypes","text","relations","peopleId","connectedPeopleId","relationType","SocialProvider","useState","setState","Provider","addConnection","connection","push","updateConnection","findConnection","find","connect","Number","addRelation","relation","deleteRelation","Ids","referenceId","filter","r","includes","addRelationType","deleteRelationType","some","Error"],"mappings":"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","file":"static/js/main.acb20782.chunk.js","sourcesContent":["import { lazy } from \"react\";\r\n\r\nconst Home = lazy(() => import(\"../pages/Home\"));\r\nconst Add = lazy(() => import(\"../pages/Add\"));\r\nconst Relationship = lazy(() => import(\"../pages/Relationship\"));\r\nconst VisualRelationship = lazy(\r\n  () => import(\"../components/VisualRelationsip\")\r\n);\r\n\r\nexport const appRoutes = () => ({\r\n  home: {\r\n    path: \"/home\",\r\n    exact: true,\r\n    component: Home,\r\n  },\r\n  add: {\r\n    path: \"/add/:peopleId\",\r\n    exact: true,\r\n    component: Add,\r\n  },\r\n  relationship: {\r\n    path: \"/relationship\",\r\n    exact: false,\r\n    component: Relationship,\r\n  },\r\n});\r\n\r\nexport const internalRoutes = () => ({\r\n  visualRelationship: {\r\n    path: \"/relationship/:relation\",\r\n    exact: true,\r\n    component: VisualRelationship,\r\n  },\r\n});\r\n","import styled from \"styled-components\";\r\nimport { IStyles } from \"../interfaces\";\r\n\r\nexport const Container = styled.div`\r\n  box-sizing: border-box;\r\n  padding: 14px 6px;\r\n`;\r\n\r\nexport const DegreeOfSeparationWrapper = styled.div`\r\n  padding: 15px;\r\n  display: flex;\r\n`;\r\n\r\nexport const PersonWrapper = styled.div<IStyles>`\r\n  padding-right: 12px;\r\n  min-width: ${(props) => props.width || \"auto\"};\r\n  max-width: ${(props) => props.width || \"180px\"}; ;\r\n`;\r\n\r\nexport const SeparationLine = styled.div<IStyles>`\r\n  min-width: ${(props) => props.width || \"100px\"};\r\n  max-width: ${(props) => props.width || \"100px\"};\r\n  height: 3px;\r\n  position: relative;\r\n  background: darkgray;\r\n  top: 24px;\r\n  margin-right: 12px;\r\n  & span {\r\n    color: gray;\r\n    position: absolute;\r\n    top: -18px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n`;\r\n\r\nexport const ScrollingX = styled.div`\r\n  overflow-x: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  &::-webkit-scrollbar {\r\n    /* Hide scrollbar for Chrome, Safari and Opera */\r\n    display: none;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.span`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  background: #fbf4e9;\r\n  z-index: 2000;\r\n  height: 4px;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    width: 65%;\r\n    height: 3px;\r\n    background: #1db9c3;\r\n    animation: loader 0.7s linear infinite normal;\r\n  }\r\n\r\n  @keyframes loader {\r\n    from {\r\n      left: -45vw;\r\n    }\r\n    to {\r\n      left: 100vw;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Loader() {\r\n  return <StyledDiv />;\r\n}\r\n","import { Suspense } from \"react\";\r\nimport { ExtendedSuspenseProps } from \"../interfaces\";\r\nimport Loader from \"./Loader\";\r\n\r\nexport default function SuspenseWrapper({\r\n  children,\r\n  fallback,\r\n}: ExtendedSuspenseProps) {\r\n  return <Suspense fallback={fallback || <Loader />}>{children}</Suspense>;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledSpan = styled.span`\r\n  color: white;\r\n  font-weight: bold;\r\n  background: #7027a0;\r\n  padding: 8px;\r\n`;\r\n\r\nexport default function Logo() {\r\n  return <StyledSpan>SC</StyledSpan>;\r\n}\r\n","import { Menu } from \"semantic-ui-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Logo from \"./Logo\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <Menu>\r\n        <Menu.Item as={NavLink} to=\"/home\">\r\n          <Logo />\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to={\"/add/new\"}>\r\n          Add\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to={\"/relationship\"}>\r\n          Relationship\r\n        </Menu.Item>\r\n      </Menu>\r\n    </header>\r\n  );\r\n}\r\n","import { Message, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment>\r\n      <Message error>\r\n        <Message.Content>404 Not Found</Message.Content>\r\n      </Message>\r\n    </Segment>\r\n  );\r\n}\r\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Suspense from \"./components/Suspense\";\nimport { appRoutes } from \"./routes-config/App.routes\";\nimport Header from \"./components/Header\";\nimport { SocialProvider } from \"./context/SocialContext\";\nimport NotFound from \"./pages/NotFound\";\nimport { Container } from \"./components/styled\";\n\nfunction App() {\n  return (\n    <>\n      <Suspense>\n        <Router>\n          <Header />\n          <SocialProvider>\n            <Container>\n              <Switch>\n                {Object.values(appRoutes()).map(\n                  ({ path, exact, component: Component }, index) => (\n                    <Route exact={exact} path={path} key={index}>\n                      <Component />\n                    </Route>\n                  )\n                )}\n                <Route path=\"/\" exact>\n                  <Redirect to=\"/home\" />\n                </Route>\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </SocialProvider>\n        </Router>\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"@inovua/reactdatagrid-community/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <ToastContainer autoClose={2000} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const isEmpty = (value: object): boolean => {\r\n  return !(value && Object.keys(value).length);\r\n};\r\n\r\nexport const postFakeRequest = (data: any) =>\r\n  new Promise((res) => setTimeout(() => res(data), 500));\r\n\r\nexport function* idGenerator() {\r\n  let i = 1;\r\n  while (true) {\r\n    yield i;\r\n    i++;\r\n  }\r\n}\r\n","import faker from \"faker\";\r\nimport { IRelationType, IRelationData } from \"./interfaces\";\r\n\r\nexport const generateFakePeople = (n: number, idGenerator: Generator) =>\r\n  new Array(n).fill(0).map(() => ({\r\n    firstName: faker.name.firstName(),\r\n    lastName: faker.name.lastName(),\r\n    id: idGenerator.next().value,\r\n  }));\r\n\r\nexport const getRelationTypes = (): IRelationType[] => [\r\n  { value: \"FRND\", text: \"Friend\" },\r\n  { value: \"BRO\", text: \"Brother\" },\r\n];\r\n\r\nexport const getRelations = (): IRelationData[] => [\r\n  { peopleId: 1, connectedPeopleId: 2, relationType: \"FRND\" },\r\n  { peopleId: 1, connectedPeopleId: 3, relationType: \"FRND\" },\r\n  { peopleId: 1, connectedPeopleId: 4, relationType: \"FRND\" },\r\n  { peopleId: 1, connectedPeopleId: 5, relationType: \"BRO\" },\r\n  { peopleId: 5, connectedPeopleId: 2, relationType: \"FRND\" },\r\n  { peopleId: 5, connectedPeopleId: 3, relationType: \"FRND\" },\r\n  { peopleId: 5, connectedPeopleId: 4, relationType: \"FRND\" },\r\n  { peopleId: 2, connectedPeopleId: 3, relationType: \"FRND\" },\r\n  { peopleId: 2, connectedPeopleId: 4, relationType: \"FRND\" },\r\n  { peopleId: 3, connectedPeopleId: 4, relationType: \"FRND\" },\r\n  { peopleId: 6, connectedPeopleId: 1, relationType: \"FRND\" },\r\n  { peopleId: 6, connectedPeopleId: 3, relationType: \"FRND\" },\r\n];\r\n","import { createContext, useState } from \"react\";\r\nimport { generateFakePeople, getRelationTypes, getRelations } from \"../seeds\";\r\nimport { ChildrenProps, ISocialContext } from \"../interfaces\";\r\nimport { idGenerator } from \"../utils\";\r\n\r\nexport const SocialContext = createContext({} as ISocialContext);\r\n\r\nconst idGen = idGenerator();\r\nconst connections = generateFakePeople(15, idGen);\r\nconst relationTypes = getRelationTypes();\r\nconst relations = getRelations();\r\n\r\nexport const SocialProvider = ({ children }: ChildrenProps) => {\r\n  const [state, setState] = useState({\r\n    connections,\r\n    relationTypes,\r\n    relations,\r\n  });\r\n  return (\r\n    <SocialContext.Provider\r\n      value={{\r\n        ...state,\r\n        addConnection: (data: any) => {\r\n          const { connections } = state,\r\n            connection = { ...data, id: idGen.next().value };\r\n          connections.push(connection);\r\n          setState({ ...state, connections: [...connections] });\r\n          return connection;\r\n        },\r\n        updateConnection: (data: any) => {\r\n          const findConnection = state.connections.find(\r\n            (connect) => connect.id === Number(data.id)\r\n          );\r\n          if (!!findConnection) {\r\n            findConnection.firstName = data.firstName;\r\n            findConnection.lastName = data.lastName;\r\n          }\r\n          return findConnection || data;\r\n        },\r\n        addRelation: (data: any) => {\r\n          const { relations } = state,\r\n            relation = { ...data };\r\n          relations.push(relation);\r\n          setState({ ...state, relations: [...relations] });\r\n          return relation;\r\n        },\r\n        deleteRelation: (Ids, referenceId) => {\r\n          const { relations } = state;\r\n          setState({\r\n            ...state,\r\n            relations: [\r\n              ...relations.filter(\r\n                (r) =>\r\n                  !(\r\n                    (Ids.includes(r.connectedPeopleId) &&\r\n                      r.peopleId === referenceId) ||\r\n                    (Ids.includes(r.peopleId) &&\r\n                      r.connectedPeopleId === referenceId)\r\n                  )\r\n              ),\r\n            ],\r\n          });\r\n        },\r\n        addRelationType: (value: string, text: string) => {\r\n          const { relationTypes } = state;\r\n          relationTypes.push({ value, text });\r\n          setState({\r\n            ...state,\r\n            relationTypes: [...relationTypes],\r\n          });\r\n        },\r\n        deleteRelationType: (values: string[]) => {\r\n          const { relationTypes, relations } = state;\r\n          if (relations.some((r) => values.includes(r.relationType))) {\r\n            throw new Error();\r\n          }\r\n          setState({\r\n            ...state,\r\n            relationTypes: relationTypes.filter(\r\n              (r) => !values.includes(r.value)\r\n            ),\r\n          });\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </SocialContext.Provider>\r\n  );\r\n};\r\n"],"sourceRoot":""}